@using PromoStudio.Web
@using PromoStudio.Web.Properties
@{
    var random = new System.Random();
}
<script>
define(["jquery"], function ($) {
    return function (buttonSelector, loginCallback) {
        var self = this,
            clientId = '@(Settings.Default.FacebookClientId)',
            clientSecret = '@(Settings.Default.FacebookClientSecret)',
            oauthScope = 'email',
            oauthType = 'token',
            oauthAppToken = null,
            oauthState = '@(random.Next())',
            oauthRedirect = '@(Url.Absolute(Url.Action("foa2cb", "Home")))',
            oauthUrl = 'https://www.facebook.com/dialog/oauth/?',
            oauthApiBase = 'https://graph.facebook.com/',
            oauthAppTokenUrl = '@(Url.Action("GetFacebookAccessToken", "OAuth"))',
            oauthValidateUrl = oauthApiBase + 'debug_token?',
            oauthProfileUrl = oauthApiBase + 'me?' +
                'fields=' + encodeURIComponent('id,name,email,picture') +
                '&access_token=',
            oauthLoginUrl = oauthUrl + 
                'scope=' + encodeURIComponent(oauthScope) +
                '&state=' + encodeURIComponent(oauthState) +
                '&client_id=' + encodeURIComponent(clientId) +
                '&redirect_uri=' + encodeURIComponent(oauthRedirect) +
                '&response_type=' + encodeURIComponent(oauthType);

        function getAppToken(token, state) {
            var btn = $(buttonSelector);
            if (state !== oauthState) {
                btn.removeClass("wait");
                alert('error');
                return;
            }
            if (oauthAppToken !== null) {
                validateToken(token, state);
            }
            else {
                $.ajax({
                    url: oauthAppTokenUrl,
                    data: null,
                    success: function (response) {
                        if (response.error !== undefined) {
                            alert(response.error.message);
                        }
                        else {
                            oauthAppToken = response.access_token;
                            validateToken(token, state);
                        }
                    },
                    dataType: "json"
                });
            }
        }

        function validateToken(token, state) {
            var btn = $(buttonSelector);
            if (state !== oauthState) {
                btn.removeClass("wait");
                alert('error');
            }
            else {
                $.ajax({
                    url: oauthValidateUrl +
                        'access_token=' + encodeURIComponent(oauthAppToken) +
                        '&input_token=' + encodeURIComponent(token),
                    data: null,
                    success: function (response) {
                        if (response.error !== undefined) {
                            btn.removeClass("wait");
                            alert(response.error.message);
                        }
                        else {
                            getUserInfo(token);
                        }
                    },
                    dataType: "jsonp"
                });
            }
        }

        function getUserInfo(token) {
            var btn = $(buttonSelector);
            $.ajax({
                url: oauthProfileUrl + encodeURIComponent(token),
                data: null,
                success: function (user) {
                    if (user.error !== undefined) {
                        btn.removeClass("wait");
                        alert(user.error.message);
                    }
                    else {
                        console.log(user);
                        btn.removeClass("wait");
                        loginCallback(user);
                    }
                },
                dataType: "jsonp"
            });
        }

        //credits: http://www.netlobo.com/url_query_string_javascript.html
        function gup(url, name) {
            name = name.replace(/[[]/, "\[").replace(/[]]/, "\]");
            var regexS = "[\?&#]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(url);
            if (results === null) {
                return "";
            }
            else {
                return results[1];
            }
        }

        self.login = function () {
            var btn = $(buttonSelector),
                win, pollTimer;

            if (btn.hasClass("wait")) { return; }
            btn.addClass("wait");

            win = window.open(oauthLoginUrl, "fboauth2", 'width=780,height=410,toolbar=0,scrollbars=0,status=0,resizable=0,location=0,menuBar=0');
            pollTimer = window.setInterval(function () {
                try {
                    console.log(win.document.location.href);
                    if (win.document.location.href.indexOf(oauthRedirect) != -1) {
                        window.clearInterval(pollTimer);
                        var url = win.document.location.href,
                            token = gup(url, 'access_token'),
                            state = gup(url, 'state'),
                            expiresIn = gup(url, 'expires_in');

                        window.setTimeout(function () { win.close(); }, 10);
                        getAppToken(token, state);
                    }
                } catch (e) {
                }
            }, 100);
        };
    };
});
</script>